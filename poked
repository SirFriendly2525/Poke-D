package poked;
import java.util.Scanner;
import static poked.turnOne.turnLoop1;
import static poked.turnTwo.turnLoop2;
//import static poked.statusCondition.statCondEffect;

public class PokeD 
{
    // variable declarartion
    static int again = 2;
    static int loop = 2;
    static int counter = 1;
    static int hitRoll = 0;
    // player types
    static String playerType1 = "normal";
    static String playerType2 = "normal";
    static String playerMoveType = "normal";
    // player 1 stats
    static int playerOneHP = 0;
    static String playerOneStatus = "normal";
    static int playerOneSPD = 0;
    // player 2 stats
    static int playerTwoHP = 0;
    static String playerTwoStatus = "normal";
    static int playerTwoSPD = 0;
    /** player 3 stats
    static int playerThreeHP = 0;
    static String playerThreeStatus = "normal";
    static int playerThreeSPD = 0;
    // player 4 stats
    static int playerFourHP = 0;
    static String playerFourStatus = "normal";
    static int playerFourSPD = 0;
    // teams?
    static String teamBattle = "no";
    */
    public static void main(String[] args) 
    {
        Scanner keyboard = new Scanner(System.in);
        /*
        System.out.println("Teams? (2 VS 2)");
        teamBattle = keyboard.next();
        switch(teamBattle)
        {
            case("yes"):
                // team battel code
                while (loop >= 2) // 2vs2 battles
                {
                    System.out.println("you have chosen teams");
                }
        }
        */
        // loop for battle 1vs1
        while (loop >= 2)
        {
            System.out.print("Enter the HP of player 1's Pokemon: ");
            playerOneHP = keyboard.nextInt();
            System.out.print("Enter the HP of player 2's Pokemon: ");
            playerTwoHP = keyboard.nextInt();
            
            // turn loop for combat
            while ((turnLoop1 >= 2) || (turnLoop2 >= 2))
            {
                if (playerOneHP <= 0)
                {
                    turnLoop1 = 1;
                    turnLoop2 = 1;
                } else if (playerTwoHP <= 0)
                {
                    turnLoop1 = 1;
                    turnLoop2 = 1;
                } else
                {
                    System.out.println("Turn "+counter);
                    counter++;
                    System.out.print("Enter the SPD of player 1's Pokemon: ");
                    playerOneSPD = keyboard.nextInt();
                    System.out.print("Enter the SPD of player 2's Pokemon: ");
                    playerTwoSPD = keyboard.nextInt();
                    if (playerOneSPD >= playerTwoSPD)
                    {
                        turnOne.playerOneTurn();
                        System.out.print("Any Status Conditions given: ");
                        playerTwoStatus = keyboard.next();
                        switch (playerTwoStatus)
                        {
                            case ("poisoned"):
                                poisonedStatus.poisonedP1();
                                break;
                            case ("burned"):
                                burnedStatus.burnedP1();
                                break;
                            case ("fainted"):
                                System.out.println("player 2 has been defeated");
                                break;
                            default:
                                break;
                        }
                        
                        if (playerTwoHP <= 0)
                        {
                            System.out.println("player 1 Wins");
                        } else
                        {
                            turnTwo.playerTwoTurn();
                            System.out.print("Any Status Condition given: ");
                            playerOneStatus = keyboard.next();
                            switch (playerOneStatus)
                            {
                                case ("poisoned"):
                                poisonedStatus.poisonedP2();
                                break;
                            case ("burned"):
                                burnedStatus.burnedP2();
                                break;
                            case ("fainted"):
                                System.out.println("player 1 has been defeated");
                                break;
                            default:
                                break;
                            }
                        }
                    } else
                    {
                        turnTwo.playerTwoTurn();
                        System.out.print("Any Status condition given: ");
                        playerOneStatus = keyboard.next();
                        switch (playerOneStatus)
                        {
                            case ("poisoned"):
                                poisonedStatus.poisonedP2();
                                break;
                            case ("burned"):
                                burnedStatus.burnedP2();
                                break;
                            case ("fainted"):
                                System.out.println("player 1 has been defeated");
                                break;
                            default:
                                break;
                        }
                        
                        if (playerOneHP <= 0)
                        {
                            System.out.println("Player 2 Wins");
                        } else
                        {
                            turnOne.playerOneTurn();
                            System.out.print("Any Status conditions given: ");
                            playerTwoStatus = keyboard.next();
                            switch (playerTwoStatus)
                            {
                                case ("poisoned"):
                                poisonedStatus.poisonedP1();
                                break;
                            case ("burned"):
                                burnedStatus.burnedP1();
                                break;
                            case ("fainted"):
                                System.out.println("player 2 has been defeated");
                                break;
                            default:
                                break;
                            }
                        }
                    }
                }
            }
            System.out.print("Play again? (2 for yes, 1 for no)");
            again = keyboard.nextInt();
            if (again == 1)
            {
                System.out.println("Thank you for playing");
                turnLoop1 = 1;
                turnLoop2 = 1;
            } else
            {
                System.out.println("Again? Are you sure?");
                turnLoop1 = 2;
                turnLoop2 = 2;
                loop = 2;
            }
        }
    }    
}
